/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package frames;

import classes.Author;
import classes.Book;
import classes.ClassType;
import classes.Search;
import classes.Helper;
import custom.buttons.ButtonColumn;
import custom.buttons.DeleteButton;
import custom.buttons.EditButton;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ivan
 */
public class JFrameListBooks extends JFrameList {

    /**
     * Creates new form JFrameListBooks
     */
    private DefaultTableModel model;
    
    public JFrameListBooks() {
        initComponents();
        setLocationRelativeTo(null);
        loadTableContent();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableBooks = new javax.swing.JTable();
        jComboBoxSearch = new javax.swing.JComboBox();
        jTextFieldSearch = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jComboBoxSearchCriteria = new javax.swing.JComboBox();
        jButtonShowAllBooks = new javax.swing.JButton();
        jButtonAddBook = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 15, 18));

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Lista de Libros");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(407, 407, 407)
                .addComponent(jLabel1)
                .addContainerGap(431, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        jTableBooks.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jTableBooks.setForeground(new java.awt.Color(51, 51, 51));
        jTableBooks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Nombre", "Precio", "Editorial", "Edicion", "Lenguage", "ISBN", "# Autores", "Modificar", "Eliminar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Float.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableBooks.setRowHeight(22);
        jScrollPane1.setViewportView(jTableBooks);

        jComboBoxSearch.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jComboBoxSearch.setForeground(new java.awt.Color(51, 51, 51));
        jComboBoxSearch.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nombre", "Precio", "Editorial", "Edicion", "Lenguage", "ISBN", "Nombre del Autor" }));
        jComboBoxSearch.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComoBoxSearchItemStateChanged(evt);
            }
        });

        jTextFieldSearch.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jTextFieldSearch.setForeground(new java.awt.Color(51, 51, 51));

        jButtonSearch.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jButtonSearch.setForeground(new java.awt.Color(51, 51, 51));
        jButtonSearch.setText("Buscar");
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        jComboBoxSearchCriteria.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jComboBoxSearchCriteria.setForeground(new java.awt.Color(51, 51, 51));
        jComboBoxSearchCriteria.setEnabled(false);

        jButtonShowAllBooks.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jButtonShowAllBooks.setForeground(new java.awt.Color(51, 51, 51));
        jButtonShowAllBooks.setText("Mostrar Todos");
        jButtonShowAllBooks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShowAllBooksActionPerformed(evt);
            }
        });

        jButtonAddBook.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jButtonAddBook.setForeground(new java.awt.Color(51, 51, 51));
        jButtonAddBook.setText("Agregar Libro");
        jButtonAddBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddBookActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBoxSearchCriteria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonAddBook)
                .addGap(57, 57, 57)
                .addComponent(jButtonShowAllBooks)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldSearch)
                        .addComponent(jComboBoxSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                        .addComponent(jComboBoxSearchCriteria, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                        .addComponent(jButtonShowAllBooks, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(jButtonAddBook, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jButtonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 341, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        // TODO add your handling code here:
        
        int index = jComboBoxSearch.getSelectedIndex();
        
        try {
            switch(index)
            {
                case 0: // name
                    loadTableContent(Book.findByStringField("name", jTextFieldSearch.getText()));
                    break;
                case 1: // price
                    double price = Double.parseDouble(jTextFieldSearch.getText());
                    loadTableContent(Book.findByPrice(getPriceCriteria(), price));
                    break;
                case 2: // publisher
                    loadTableContent(Book.findByStringField("publisher", jTextFieldSearch.getText()));
                    break;
                case 3: // edition
                    int edition = Integer.parseInt(jTextFieldSearch.getText());
                    loadTableContent(Book.findByIntField("edition", edition));
                    break;
                case 4: // language
                    loadTableContent(Book.findByStringField("language", jTextFieldSearch.getText()));
                    break;
                case 5: // ISBN
                    loadTableContent(Book.findByStringField("ISBN", jTextFieldSearch.getText()));
                    break;
                case 6: // author lastname
                    loadTableContent(Author.findByName(getNameCriteria(), jTextFieldSearch.getText()).getBooks());
                    break;
            }
        }
//        catch(NullPointerException e)
//        {
//            System.out.println(e);
//        }
        catch(NumberFormatException e)
        {
            System.out.println(e);
        }
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jComoBoxSearchItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComoBoxSearchItemStateChanged
        // TODO add your handling code here:
        int selectedIndex = jComboBoxSearch.getSelectedIndex();
        if(selectedIndex == 1 || selectedIndex == 6)
        {
            jComboBoxSearchCriteria.setEnabled(true);
            loadSearchCriteriaOptions(selectedIndex);
        }
        else
        {
            jComboBoxSearchCriteria.setEnabled(false);
        }
    }//GEN-LAST:event_jComoBoxSearchItemStateChanged

    private void jButtonShowAllBooksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShowAllBooksActionPerformed
        // TODO add your handling code here:
        loadTableContent();
        Helper.clearTextFields(jTextFieldSearch);
    }//GEN-LAST:event_jButtonShowAllBooksActionPerformed

    private void jButtonAddBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddBookActionPerformed
        // TODO add your handling code here:
        new JFrameAddBook().setVisible(true);
    }//GEN-LAST:event_jButtonAddBookActionPerformed

    @Override
    public void loadTableContent()
    {
        createTable();
        
        model = (DefaultTableModel)jTableBooks.getModel();
        
        int i = 1;
        for(Book book : Book.all())
        {
            EditButton edit = new EditButton(this, ClassType.BOOK, book.getID(), "Modificar");
            DeleteButton delete = new DeleteButton(this, ClassType.BOOK, book.getID(), "Eliminar");
                    
            model.addRow(new Object[]{i++, book.getName(), book.getPrice(), book.getPublisher(), 
                                      book.getEdition(), book.getLanguage(), book.getISBN(), book.getAuthors().size(), edit, delete});
            
        }
        
        new ButtonColumn(jTableBooks, "Modificar", 8);
        new ButtonColumn(jTableBooks, "Eliminar", 9);
    }
    
    public void loadTableContent(ArrayList<Book> books)
    {
        createTable();
        
        if(books == null) return;
        
        model = (DefaultTableModel)jTableBooks.getModel();
        
        int i = 1;
        for(Book book : books)
        {
            EditButton edit = new EditButton(this, ClassType.BOOK, book.getID(), "Modificar");
            DeleteButton delete = new DeleteButton(this, ClassType.BOOK, book.getID(), "Eliminar");
                    
            model.addRow(new Object[]{i++, book.getName(), book.getPrice(), book.getPublisher(), 
                                      book.getEdition(), book.getLanguage(), book.getISBN(), book.getAuthors().size(), edit, delete});
            
        }
        
        new ButtonColumn(jTableBooks, "Modificar", 8);
        new ButtonColumn(jTableBooks, "Eliminar", 9);
    }
    
    public void loadSearchCriteriaOptions(int index)
    {
        switch(index)
        {
            case 1:
                String[] priceCriterias = {"Menor o Igual", "Igual", "Mayor o Igual"};
                jComboBoxSearchCriteria.removeAllItems();
                for(String priceCriteria : priceCriterias){
                    jComboBoxSearchCriteria.addItem(priceCriteria);
                }
                break;
            case 6:
                String[] nameCriterias = {"Nombre", "Apellidos", "A. Paterno", "A. Materno"};
                jComboBoxSearchCriteria.removeAllItems();
                for(String nameCriteria : nameCriterias){
                    jComboBoxSearchCriteria.addItem(nameCriteria);
                }
                break;
        }
    }
    
    @Override
    protected void createTable()
    {
        jTableBooks.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jTableBooks.setForeground(new java.awt.Color(51, 51, 51));
        jTableBooks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "Nombre", "Precio", "Editorial", "Edicion", "Lenguage", "ISBN", "# Autores", "Modificar", "Eliminar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Float.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTableBooks.setRowHeight(22);
    }
    
    private Search getPriceCriteria()
    {
        switch(jComboBoxSearchCriteria.getSelectedIndex())
        {
            case 0:
                return Search.LESS_THAN;
            case 1:
                return Search.EQUAL_TO;
            case 2:
                return Search.GREATER_THAN;
        }
        
        return null;
    }
    
    private Search getNameCriteria()
    {
        switch(jComboBoxSearchCriteria.getSelectedIndex())
        {
            case 0:
                return Search.NAME;
            case 1:
                return Search.SURNAME;
            case 2:
                return Search.FIRST_NAME;
            case 3:
                return Search.LAST_NAME;
        }
        
        return null;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameListBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameListBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameListBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameListBooks.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameListBooks().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddBook;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JButton jButtonShowAllBooks;
    private javax.swing.JComboBox jComboBoxSearch;
    private javax.swing.JComboBox jComboBoxSearchCriteria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableBooks;
    private javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables
}
